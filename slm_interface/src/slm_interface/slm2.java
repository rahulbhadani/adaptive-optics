/*
 * slm2.java
 * author: Min Ren 2005-2007, Gunnsteinn Hall 2007-2009
 * Created on December 20, 2005, 3:31 PM
 * this file accepts the zernike polynomials parameter, lut file or picture pattern
 * generate the data sent to SLM.
 *
 *
 *change record,
 *1) line635 + ---> -
 */

package slm_interface;

import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.lang.Math;
import javax.imageio.*;
import javax.swing.JOptionPane;
import java.io.*;

/**
 *
 */
public class slm2
        extends javax.swing.JFrame
        implements WindowListener {
    /**
     * Indicates whether the device is being used, or whether it is running
     * in graphics only mode.
     */
    final boolean USE_DEVICE = false;

    /**
     * Numerical coefficients.
     */
    private int numCoef;
    private double[] dcoef;
    private static double[][] samples;
    private static final int WIDTH = 512, HEIGHT = 512;    

    /**
     * Surface test?
     */
    private SurfacePlotter srt;

    /**
     * LUT file information.
     */
    private File LUTFile;
    private String LUT_AbsolutePath;
    private File PatternFile;
    private String Pattern_AbsolutePath;

    /**
     * Zernike coefficients file.
     */
    private File ZerCoefile;

    /**
     * dRad?
     */
    private double dRad;
    private double []dlut;

    /**
     * Remember the focus correction?.
     */
    private double rememberfocus;

    
    /**
     * Constructor.
     * Initializes and starts the window.
     */
    public slm2() {
        initComponents();
        addWindowListener(this);
        jFileChooser1.setVisible(false);
        
        //set the max number of zernike polynomails to 30. 
        numCoef = 30;
        srt = new SurfacePlotter();
        try{
            srt.buildDisplay(jPanel_3dpic);
            srt.buildDisplay1(jPanel_3dpic1);
        }catch (Exception e){
            System.err.println("Caught IOException: " + e.getMessage());}
        
        dcoef = new double[numCoef];
        //////////////////////////////////////
        ////////////////////////////////////
        samples = new double[1][WIDTH * HEIGHT];    
        dlut = new double[256];
        for (int i = 0; i < 256; i++){
            dlut[i] = i;
        }
    }

    public void windowActivated(WindowEvent e) { }
    public void windowClosed(WindowEvent e) { }
    
    // Called upon window closing, send the power off command to the SLM.
    public void windowClosing(WindowEvent e) {
        if (USE_DEVICE) {
            // Power off the system.
            com.slmcontrol.slmAPI.slmjava(samples[0], (char)65);
        }
    }
    
    public void windowDeactivated(WindowEvent e) { }
    public void windowDeiconified(WindowEvent e) { }
    public void windowIconified(WindowEvent e) { }
    public void windowOpened(WindowEvent e) { }
 
    /** This method is called from within the constructor to
     * initialize the form
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLWaveFront = new javax.swing.JLabel();
        jPanel_3dpic = new javax.swing.JPanel();
        jTF_slmsize = new javax.swing.JTextField();
        jL_slmsize = new javax.swing.JLabel();
        jFileChooser1 = new javax.swing.JFileChooser();
        jPanel_3dpic1 = new javax.swing.JPanel();
        panel1 = new java.awt.Panel();
        jTF_pattern = new javax.swing.JTextField();
        jBut_patten_brw = new javax.swing.JButton();
        jL_patten = new javax.swing.JLabel();
        jBut_patten_Clear = new javax.swing.JButton();
        jBut_patten_Send = new javax.swing.JButton();
        panel2 = new java.awt.Panel();
        jTF_pattern1 = new javax.swing.JTextField();
        jBut_patten_brw1 = new javax.swing.JButton();
        jL_patten1 = new javax.swing.JLabel();
        jBut_patten_Clear1 = new javax.swing.JButton();
        jBut_patten_Send1 = new javax.swing.JButton();
        jBut_show = new javax.swing.JButton();
        jBut_send2slm = new javax.swing.JButton();
        jBut_poweroff = new javax.swing.JButton();
        panel3 = new java.awt.Panel();
        panel4 = new java.awt.Panel();
        jTF_pattern3 = new javax.swing.JTextField();
        jBut_patten_brw3 = new javax.swing.JButton();
        jL_patten3 = new javax.swing.JLabel();
        jBut_patten_Clear3 = new javax.swing.JButton();
        jBut_patten_Send3 = new javax.swing.JButton();
        jLCoef1 = new javax.swing.JLabel();
        jTFCoef1 = new javax.swing.JTextField();
        jTFCoef3 = new javax.swing.JTextField();
        jLCoef2 = new javax.swing.JLabel();
        jTFCoef2 = new javax.swing.JTextField();
        jLCoef3 = new javax.swing.JLabel();
        jTFCoef6 = new javax.swing.JTextField();
        jLCoef4 = new javax.swing.JLabel();
        jTFCoef5 = new javax.swing.JTextField();
        jLCoef5 = new javax.swing.JLabel();
        jTFCoef4 = new javax.swing.JTextField();
        jLCoef6 = new javax.swing.JLabel();
        jLCoef7 = new javax.swing.JLabel();
        jTFCoef7 = new javax.swing.JTextField();
        jLCoef8 = new javax.swing.JLabel();
        jTFCoef10 = new javax.swing.JTextField();
        jLCoef9 = new javax.swing.JLabel();
        jTFCoef8 = new javax.swing.JTextField();
        jLCoef10 = new javax.swing.JLabel();
        jTFCoef11 = new javax.swing.JTextField();
        jLCoef11 = new javax.swing.JLabel();
        jTFCoef9 = new javax.swing.JTextField();
        jLCoef12 = new javax.swing.JLabel();
        jTFCoef12 = new javax.swing.JTextField();
        jLCoef13 = new javax.swing.JLabel();
        jTFCoef13 = new javax.swing.JTextField();
        jLCoef14 = new javax.swing.JLabel();
        jTFCoef14 = new javax.swing.JTextField();
        jLCoef15 = new javax.swing.JLabel();
        jTFCoef15 = new javax.swing.JTextField();
        jTFCoef16 = new javax.swing.JTextField();
        jLCoef18 = new javax.swing.JLabel();
        jBut_lut_changefocus = new javax.swing.JButton();
        jBut_lut_resetfocus = new javax.swing.JButton();
        jL_zernikpc = new javax.swing.JLabel();
        jBut_open = new javax.swing.JButton();
        jBut_save = new javax.swing.JButton();
        jBut_reset = new javax.swing.JButton();
        panel5 = new java.awt.Panel();
        panel6 = new java.awt.Panel();
        jTF_pattern4 = new javax.swing.JTextField();
        jBut_patten_brw4 = new javax.swing.JButton();
        jL_patten4 = new javax.swing.JLabel();
        jBut_patten_Clear4 = new javax.swing.JButton();
        jBut_patten_Send4 = new javax.swing.JButton();
        jL_lut = new javax.swing.JLabel();
        jBut_lut_browse = new javax.swing.JButton();
        jTF_lut = new javax.swing.JTextField();
        jL_slmresolution = new javax.swing.JLabel();
        jTF_slmresolution = new javax.swing.JTextField();
        jCutCenterCheckBox = new javax.swing.JCheckBox();
        jSquareCheckBox = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLWaveFront.setFont(new java.awt.Font("Arial", 1, 20));
        jLWaveFront.setForeground(new java.awt.Color(255, 51, 51));
        jLWaveFront.setText("Wave Front");
        getContentPane().add(jLWaveFront, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 90, 120, 30));

        jPanel_3dpic.setLayout(new java.awt.BorderLayout());
        getContentPane().add(jPanel_3dpic, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 140, 350, 350));

        jTF_slmsize.setText("512");
        getContentPane().add(jTF_slmsize, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 30, 60, -1));

        jL_slmsize.setFont(new java.awt.Font("Arial", 1, 12));
        jL_slmsize.setText("SLM size");
        getContentPane().add(jL_slmsize, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 30, 80, 20));

        jFileChooser1.setPreferredSize(new java.awt.Dimension(587, 400));
        jFileChooser1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jFileChooser1MouseClicked(evt);
            }
        });
        getContentPane().add(jFileChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 200, -1, -1));

        jPanel_3dpic1.setLayout(new java.awt.BorderLayout());
        getContentPane().add(jPanel_3dpic1, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 140, 350, 350));

        panel1.setBackground(new java.awt.Color(204, 204, 204));
        panel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        panel1.add(jTF_pattern, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 310, 20));

        jBut_patten_brw.setFont(new java.awt.Font("Arial", 1, 12));
        jBut_patten_brw.setText("Browse");
        jBut_patten_brw.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBut_patten_brwMouseClicked(evt);
            }
        });
        panel1.add(jBut_patten_brw, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));

        jL_patten.setFont(new java.awt.Font("Arial", 1, 12));
        jL_patten.setForeground(new java.awt.Color(255, 51, 51));
        jL_patten.setText("Select Pattern");
        panel1.add(jL_patten, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 90, 20));

        jBut_patten_Clear.setFont(new java.awt.Font("Arial", 1, 12));
        jBut_patten_Clear.setText("Clear");
        jBut_patten_Clear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBut_patten_ClearMouseClicked(evt);
            }
        });
        panel1.add(jBut_patten_Clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 40, 80, -1));

        jBut_patten_Send.setFont(new java.awt.Font("Arial", 1, 12));
        jBut_patten_Send.setText("Send");
        jBut_patten_Send.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBut_patten_SendMouseClicked(evt);
            }
        });
        panel1.add(jBut_patten_Send, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 40, 80, -1));

        panel2.setBackground(new java.awt.Color(204, 204, 204));
        panel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        panel2.add(jTF_pattern1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 310, 20));

        jBut_patten_brw1.setFont(new java.awt.Font("Arial", 1, 12));
        jBut_patten_brw1.setText("Browse");
        jBut_patten_brw1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBut_patten_brw1MouseClicked(evt);
            }
        });
        panel2.add(jBut_patten_brw1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, -1));

        jL_patten1.setFont(new java.awt.Font("Arial", 1, 12));
        jL_patten1.setText("Select Pattern");
        panel2.add(jL_patten1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 90, 20));

        jBut_patten_Clear1.setFont(new java.awt.Font("Arial", 1, 12));
        jBut_patten_Clear1.setText("Clear");
        jBut_patten_Clear1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBut_patten_Clear1MouseClicked(evt);
            }
        });
        panel2.add(jBut_patten_Clear1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 50, 80, -1));

        jBut_patten_Send1.setFont(new java.awt.Font("Arial", 1, 12));
        jBut_patten_Send1.setText("Send");
        jBut_patten_Send1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBut_patten_Send1MouseClicked(evt);
            }
        });
        panel2.add(jBut_patten_Send1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 50, 80, -1));

        panel1.add(panel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 560, 330, 120));

        getContentPane().add(panel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 540, 330, 100));

        jBut_show.setFont(new java.awt.Font("Arial", 1, 12));
        jBut_show.setText("Show image");
        jBut_show.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBut_showMouseClicked(evt);
            }
        });
        jBut_show.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBut_showActionPerformed(evt);
            }
        });
        getContentPane().add(jBut_show, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 500, 110, 30));

        jBut_send2slm.setFont(new java.awt.Font("Arial", 1, 12));
        jBut_send2slm.setText("SendSLM");
        jBut_send2slm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBut_send2slmMouseClicked(evt);
            }
        });
        jBut_send2slm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBut_send2slmActionPerformed(evt);
            }
        });
        getContentPane().add(jBut_send2slm, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 500, 90, 30));

        jBut_poweroff.setFont(new java.awt.Font("Arial", 1, 12));
        jBut_poweroff.setText("Power Off");
        jBut_poweroff.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBut_poweroffMouseClicked(evt);
            }
        });
        getContentPane().add(jBut_poweroff, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 710, 310, 30));

        panel3.setBackground(new java.awt.Color(204, 204, 204));
        panel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panel4.setBackground(new java.awt.Color(204, 204, 204));
        panel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        panel4.add(jTF_pattern3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 310, 20));

        jBut_patten_brw3.setFont(new java.awt.Font("Arial", 1, 12));
        jBut_patten_brw3.setText("Browse");
        jBut_patten_brw3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBut_patten_brw3MouseClicked(evt);
            }
        });
        panel4.add(jBut_patten_brw3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, -1));

        jL_patten3.setFont(new java.awt.Font("Arial", 1, 12));
        jL_patten3.setText("Select Pattern");
        panel4.add(jL_patten3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 90, 20));

        jBut_patten_Clear3.setFont(new java.awt.Font("Arial", 1, 12));
        jBut_patten_Clear3.setText("Clear");
        jBut_patten_Clear3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBut_patten_Clear3MouseClicked(evt);
            }
        });
        panel4.add(jBut_patten_Clear3, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 50, 80, -1));

        jBut_patten_Send3.setFont(new java.awt.Font("Arial", 1, 12));
        jBut_patten_Send3.setText("Send");
        jBut_patten_Send3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBut_patten_Send3MouseClicked(evt);
            }
        });
        panel4.add(jBut_patten_Send3, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 50, 80, -1));

        panel3.add(panel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 560, 330, 120));

        jLCoef1.setFont(new java.awt.Font("Arial", 1, 12));
        jLCoef1.setText("Piston");
        panel3.add(jLCoef1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 40, -1));

        jTFCoef1.setText("0");
        jTFCoef1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFCoef1ActionPerformed(evt);
            }
        });
        panel3.add(jTFCoef1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 70, 60, -1));

        jTFCoef3.setText("0");
        jTFCoef3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFCoef3ActionPerformed(evt);
            }
        });
        panel3.add(jTFCoef3, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 100, 60, -1));

        jLCoef2.setFont(new java.awt.Font("Arial", 1, 12));
        jLCoef2.setText("Tilt y");
        panel3.add(jLCoef2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 100, 70, -1));

        jTFCoef2.setText("0");
        panel3.add(jTFCoef2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 100, 60, -1));

        jLCoef3.setFont(new java.awt.Font("Arial", 1, 12));
        jLCoef3.setText("Tilt x");
        panel3.add(jLCoef3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 30, -1));

        jTFCoef6.setText("0");
        jTFCoef6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFCoef6ActionPerformed(evt);
            }
        });
        panel3.add(jTFCoef6, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 160, 60, -1));

        jLCoef4.setFont(new java.awt.Font("Arial", 1, 12));
        jLCoef4.setText("Astig y");
        panel3.add(jLCoef4, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 160, 60, -1));

        jTFCoef5.setText("0");
        jTFCoef5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFCoef5ActionPerformed(evt);
            }
        });
        panel3.add(jTFCoef5, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 160, 60, -1));

        jLCoef5.setFont(new java.awt.Font("Arial", 1, 12));
        jLCoef5.setText("Astig x");
        panel3.add(jLCoef5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 50, -1));

        jTFCoef4.setText("0");
        panel3.add(jTFCoef4, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 130, 60, -1));

        jLCoef6.setFont(new java.awt.Font("Arial", 1, 12));
        jLCoef6.setText("Defocus");
        panel3.add(jLCoef6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 50, -1));

        jLCoef7.setFont(new java.awt.Font("Arial", 1, 12));
        jLCoef7.setText("Coma x");
        panel3.add(jLCoef7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 50, -1));

        jTFCoef7.setText("0");
        panel3.add(jTFCoef7, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 190, 60, -1));

        jLCoef8.setFont(new java.awt.Font("Arial", 1, 12));
        jLCoef8.setText("Trefoil x");
        panel3.add(jLCoef8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 70, -1));

        jTFCoef10.setText("0");
        panel3.add(jTFCoef10, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 250, 60, -1));

        jLCoef9.setFont(new java.awt.Font("Arial", 1, 12));
        jLCoef9.setText("Coma y");
        panel3.add(jLCoef9, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 190, 70, -1));

        jTFCoef8.setText("0");
        jTFCoef8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFCoef8ActionPerformed(evt);
            }
        });
        panel3.add(jTFCoef8, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 190, 60, -1));

        jLCoef10.setFont(new java.awt.Font("Arial", 1, 12));
        jLCoef10.setText("Trefoil y");
        panel3.add(jLCoef10, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 250, 70, -1));

        jTFCoef11.setText("0");
        jTFCoef11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFCoef11ActionPerformed(evt);
            }
        });
        panel3.add(jTFCoef11, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 250, 60, -1));

        jLCoef11.setFont(new java.awt.Font("Arial", 1, 12));
        jLCoef11.setText("Spherical");
        panel3.add(jLCoef11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 80, -1));

        jTFCoef9.setText("0");
        jTFCoef9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFCoef9ActionPerformed(evt);
            }
        });
        panel3.add(jTFCoef9, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 220, 60, -1));

        jLCoef12.setFont(new java.awt.Font("Arial", 1, 12));
        jLCoef12.setText("2nd Astig x");
        panel3.add(jLCoef12, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 70, -1));

        jTFCoef12.setText("0");
        jTFCoef12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFCoef12ActionPerformed(evt);
            }
        });
        panel3.add(jTFCoef12, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 280, 60, -1));

        jLCoef13.setFont(new java.awt.Font("Arial", 1, 12));
        jLCoef13.setText("2nd Astig y");
        panel3.add(jLCoef13, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 280, 70, -1));

        jTFCoef13.setText("0");
        panel3.add(jTFCoef13, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 280, 60, -1));

        jLCoef14.setFont(new java.awt.Font("Arial", 1, 12));
        jLCoef14.setText("2nd Coma x");
        panel3.add(jLCoef14, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 310, 70, -1));

        jTFCoef14.setText("0");
        jTFCoef14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFCoef14ActionPerformed(evt);
            }
        });
        panel3.add(jTFCoef14, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 310, 60, -1));

        jLCoef15.setFont(new java.awt.Font("Arial", 1, 12));
        jLCoef15.setText("2nd Coma y");
        panel3.add(jLCoef15, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 310, 70, -1));

        jTFCoef15.setText("0");
        jTFCoef15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFCoef15ActionPerformed(evt);
            }
        });
        panel3.add(jTFCoef15, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 310, 60, -1));

        jTFCoef16.setText("0");
        panel3.add(jTFCoef16, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 340, 40, -1));

        jLCoef18.setFont(new java.awt.Font("Arial", 1, 12));
        jLCoef18.setText("2nd Spherical");
        panel3.add(jLCoef18, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 340, 80, -1));

        jBut_lut_changefocus.setFont(new java.awt.Font("Arial", 1, 12));
        jBut_lut_changefocus.setLabel("Correct Focus");
        jBut_lut_changefocus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBut_lut_changefocusMouseClicked(evt);
            }
        });
        jBut_lut_changefocus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBut_lut_changefocusActionPerformed(evt);
            }
        });
        panel3.add(jBut_lut_changefocus, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 220, 120, -1));

        jBut_lut_resetfocus.setFont(new java.awt.Font("Arial", 1, 12));
        jBut_lut_resetfocus.setText("Reset Focus");
        jBut_lut_resetfocus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBut_lut_resetfocusMouseClicked(evt);
            }
        });
        panel3.add(jBut_lut_resetfocus, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 130, 120, -1));

        jL_zernikpc.setFont(new java.awt.Font("Arial", 1, 18));
        jL_zernikpc.setForeground(new java.awt.Color(255, 51, 51));
        jL_zernikpc.setText("Zernike Polynomial Coefficicents");
        panel3.add(jL_zernikpc, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 300, 30));

        jBut_open.setFont(new java.awt.Font("Arial", 1, 12));
        jBut_open.setText("Open");
        jBut_open.setToolTipText("");
        jBut_open.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBut_openMouseClicked(evt);
            }
        });
        jBut_open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBut_openActionPerformed(evt);
            }
        });
        panel3.add(jBut_open, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, 70, -1));

        jBut_save.setFont(new java.awt.Font("Arial", 1, 12));
        jBut_save.setText("Save");
        jBut_save.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBut_saveMouseClicked(evt);
            }
        });
        panel3.add(jBut_save, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 370, 70, -1));

        jBut_reset.setFont(new java.awt.Font("Arial", 1, 12));
        jBut_reset.setText("Reset");
        jBut_reset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBut_resetMouseClicked(evt);
            }
        });
        panel3.add(jBut_reset, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 370, 70, -1));

        getContentPane().add(panel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 330, 400));

        panel5.setBackground(new java.awt.Color(204, 204, 204));
        panel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panel6.setBackground(new java.awt.Color(204, 204, 204));
        panel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        panel6.add(jTF_pattern4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 310, 20));

        jBut_patten_brw4.setFont(new java.awt.Font("Arial", 1, 12));
        jBut_patten_brw4.setText("Browse");
        jBut_patten_brw4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBut_patten_brw4MouseClicked(evt);
            }
        });
        panel6.add(jBut_patten_brw4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, -1));

        jL_patten4.setFont(new java.awt.Font("Arial", 1, 12));
        jL_patten4.setText("Select Pattern");
        panel6.add(jL_patten4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 90, 20));

        jBut_patten_Clear4.setFont(new java.awt.Font("Arial", 1, 12));
        jBut_patten_Clear4.setText("Clear");
        jBut_patten_Clear4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBut_patten_Clear4MouseClicked(evt);
            }
        });
        panel6.add(jBut_patten_Clear4, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 50, 80, -1));

        jBut_patten_Send4.setFont(new java.awt.Font("Arial", 1, 12));
        jBut_patten_Send4.setText("Send");
        jBut_patten_Send4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBut_patten_Send4MouseClicked(evt);
            }
        });
        panel6.add(jBut_patten_Send4, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 50, 80, -1));

        panel5.add(panel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 560, 330, 120));

        jL_lut.setFont(new java.awt.Font("Arial", 1, 12));
        jL_lut.setForeground(new java.awt.Color(255, 51, 51));
        jL_lut.setText("Select LUT file");
        panel5.add(jL_lut, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 100, 20));

        jBut_lut_browse.setFont(new java.awt.Font("Arial", 1, 12));
        jBut_lut_browse.setText("Browse");
        jBut_lut_browse.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBut_lut_browseMouseClicked(evt);
            }
        });
        panel5.add(jBut_lut_browse, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 10, 80, -1));

        jTF_lut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTF_lutActionPerformed(evt);
            }
        });
        panel5.add(jTF_lut, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 300, 20));

        getContentPane().add(panel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 420, 330, 70));

        jL_slmresolution.setFont(new java.awt.Font("Arial", 1, 12));
        jL_slmresolution.setText("SLM resolution");
        getContentPane().add(jL_slmresolution, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 60, -1, 20));

        jTF_slmresolution.setText("512");
        getContentPane().add(jTF_slmresolution, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 60, 60, -1));

        jCutCenterCheckBox.setText("Cut out center");
        getContentPane().add(jCutCenterCheckBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 680, 320, -1));

        jSquareCheckBox.setText("Use square shape");
        jSquareCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSquareCheckBoxActionPerformed(evt);
            }
        });
        getContentPane().add(jSquareCheckBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 650, 320, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBut_patten_Send4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBut_patten_Send4MouseClicked
// TODO add your handling code here:
    }//GEN-LAST:event_jBut_patten_Send4MouseClicked

    private void jBut_patten_Clear4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBut_patten_Clear4MouseClicked
// TODO add your handling code here:
    }//GEN-LAST:event_jBut_patten_Clear4MouseClicked

    private void jBut_patten_brw4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBut_patten_brw4MouseClicked
// TODO add your handling code here:
    }//GEN-LAST:event_jBut_patten_brw4MouseClicked

    private void jBut_patten_Send3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBut_patten_Send3MouseClicked
// TODO add your handling code here:
    }//GEN-LAST:event_jBut_patten_Send3MouseClicked

    private void jBut_patten_Clear3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBut_patten_Clear3MouseClicked
// TODO add your handling code here:
    }//GEN-LAST:event_jBut_patten_Clear3MouseClicked

    private void jBut_patten_brw3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBut_patten_brw3MouseClicked
// TODO add your handling code here:
    }//GEN-LAST:event_jBut_patten_brw3MouseClicked

    private void jBut_patten_Send1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBut_patten_Send1MouseClicked
// TODO add your handling code here:
    }//GEN-LAST:event_jBut_patten_Send1MouseClicked

    private void jBut_patten_Clear1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBut_patten_Clear1MouseClicked
// TODO add your handling code here:
    }//GEN-LAST:event_jBut_patten_Clear1MouseClicked

    private void jBut_patten_brw1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBut_patten_brw1MouseClicked
// TODO add your handling code here:
    }//GEN-LAST:event_jBut_patten_brw1MouseClicked

    //called when button, "reset the focus" is clicked.
    private void jBut_lut_resetfocusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBut_lut_resetfocusMouseClicked
// TODO add your handling coe here:
        String oldfocus;
        //take the value remembered before focus is changed due to spherical change
        oldfocus = String.valueOf((float)rememberfocus);
        //set the old value to the defocus parameter
        jTFCoef4.setText(oldfocus);
    }//GEN-LAST:event_jBut_lut_resetfocusMouseClicked

    /*    */

    //the focus value have to be changed if shperical parameter is changed
    //because shperical polynomials will change focus length also
    //according to the formula, changes on focus value from spherical is 3 times of spherical parameter.
    private void recalculate_focus(){
        double sphparameter, focusold, focuschange, secondsph;
        String sph, foc, secsph;
        sph = jTFCoef9.getText();
        secsph = jTFCoef16.getText();
        sphparameter = Double.valueOf(sph);
        secondsph = Double.valueOf(secsph);
        
        // this fomular is gotten by real test. 1. find the relation between focus parameter and real focus change read from microscopy. 
        // 2. find the relation between spherical parameter and real focus change 
        // 3. using three order polynomial curving fit find the relation between spherical parameter and focus parameter. 
        focuschange = -0.00027*sphparameter*sphparameter*sphparameter + 0.006 * sphparameter*sphparameter - 2.456 * sphparameter + 0.48;
        focuschange = focuschange + 2*secondsph;
        
        //the relationship
        //focuschange = -3*sphparameter;
        foc = jTFCoef4.getText();
        focusold = Double.valueOf(foc);
      
        //remember the old value
        rememberfocus = focusold;
        focusold = focusold - focuschange;
        
        foc = String.valueOf((float)focusold);
        jTFCoef4.setText(foc);
    }

    /**
     * The focus value have to be changed for large S.A. and
     * secondary S.A. aberrations.
     *  This is an analytic correction based on numerical calculations
     * of the Strehl ratio for large aberrations with a defocus correction.
     * N.B. These are for very high values of SA.
     */
    private void correct_focus(){
        String foc;
        double SA, S2A, D;
        
        SA = Double.valueOf(jTFCoef9.getText());
        S2A = Double.valueOf(jTFCoef16.getText());
        
        D=0.0;
        
        /* Correction for S.A. defocus. */
        if ((SA >= 0.0) && (SA < 0.78)) {
            D+=0.0;
        } else if ((SA >= 0.78) && (SA < 1.28)) {
            D+=1.0;
        } else if ((SA >= 1.28) && (SA < 1.78)) {
            D+=2.0;
        } else if ((SA >= 1.78) && (SA < 2.23)) {
            D+=3.0;
        } else if ((SA >= 1.23) && (SA < 2.67)) {
            D+=4.0;
        } else if ((SA >= 2.67) && (SA < 3.07)) {
            D+=5.0;
        } else if ((SA >= 3.07) && (SA < 3.50)) {
            D+=6.0;
        } else if ((SA >= 3.50) && (SA < 3.90)) {
            D+=7.0;
        } else if ((SA >= 3.90) && (SA < 4.30)) {
            D+=8.0;
        } else if ((SA >= 4.30) && (SA < 4.70)) {
            D+=9.0;
        } else if ((SA >= 4.70) && (SA < 5.10)) {
            D+=10.0;
        } else if ((SA >= 5.10) && (SA < 5.50)) {
            D+=11.0;
        } else if ((SA >= 5.50) && (SA < 5.87)) {
            D+=12.0;
        } else if ((SA >= 5.87) && (SA < 6.27)) {
            D+=13.0;
        } else if ((SA >= 6.27) && (SA < 6.63)) {
            D+=14.0;
        }
        
        /* Correction for secondary S.A. defocus. */
        if ((S2A >= 0.0) && (S2A < 0.78)) {
            D+=0.0;
        } else if ((S2A >= 0.78) && (S2A < 1.28)) {
            D+=1.0;
        } else if ((S2A >= 1.28) && (S2A < 1.78)) {
            D+=2.0;
        } else if ((S2A >= 1.78) && (S2A < 2.23)) {
            D+=3.0;
        } else if ((S2A >= 1.23) && (S2A < 2.67)) {
            D+=4.0;
        } else if ((S2A >= 2.67) && (S2A < 3.07)) {
            D+=5.0;
        } else if ((S2A >= 3.07) && (S2A < 3.50)) {
            D+=6.0;
        } else if ((S2A >= 3.50) && (S2A < 3.90)) {
            D+=7.0;
        } else if ((S2A >= 3.90) && (S2A < 4.30)) {
            D+=8.0;
        } else if ((S2A >= 4.30) && (S2A < 4.70)) {
            D+=9.0;
        } else if ((S2A >= 4.70) && (S2A < 5.10)) {
            D+=10.0;
        } else if ((S2A >= 5.10) && (S2A < 5.50)) {
            D+=11.0;
        } else if ((S2A >= 5.50) && (S2A < 5.87)) {
            D+=12.0;
        } else if ((S2A >= 5.87) && (S2A < 6.27)) {
            D+=13.0;
        } else if ((S2A >= 6.27) && (S2A < 6.63)) {
            D+=14.0;
        }
        
        SA = (1.5)*S2A;
        if ((SA >= 0.0) && (SA < 0.78)) {
            D-=0.0;
        } else if ((SA >= 0.78) && (SA < 1.28)) {
            D-=1.0;
        } else if ((SA >= 1.28) && (SA < 1.78)) {
            D-=2.0;
        } else if ((SA >= 1.78) && (SA < 2.23)) {
            D-=3.0;
        } else if ((SA >= 1.23) && (SA < 2.67)) {
            D-=4.0;
        } else if ((SA >= 2.67) && (SA < 3.07)) {
            D-=5.0;
        } else if ((SA >= 3.07) && (SA < 3.50)) {
            D-=6.0;
        } else if ((SA >= 3.50) && (SA < 3.90)) {
            D-=7.0;
        } else if ((SA >= 3.90) && (SA < 4.30)) {
            D-=8.0;
        } else if ((SA >= 4.30) && (SA < 4.70)) {
            D-=9.0;
        } else if ((SA >= 4.70) && (SA < 5.10)) {
            D-=10.0;
        } else if ((SA >= 5.10) && (SA < 5.50)) {
            D-=11.0;
        } else if ((SA >= 5.50) && (SA < 5.87)) {
            D-=12.0;
        } else if ((SA >= 5.87) && (SA < 6.27)) {
            D-=13.0;
        } else if ((SA >= 6.27) && (SA < 6.63)) {
            D-=14.0;
        }
        
        jTFCoef4.setText(String.valueOf(D));
    }

    
    private void jBut_lut_changefocusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBut_lut_changefocusMouseClicked
        //recalculate_focus();
        correct_focus();
    }//GEN-LAST:event_jBut_lut_changefocusMouseClicked

    private void jBut_lut_changefocusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBut_lut_changefocusActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jBut_lut_changefocusActionPerformed

    private void jTF_lutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTF_lutActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jTF_lutActionPerformed

    private void jBut_patten_ClearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBut_patten_ClearMouseClicked
        jTF_pattern.setText("");
    }//GEN-LAST:event_jBut_patten_ClearMouseClicked

    private void jBut_patten_SendMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBut_patten_SendMouseClicked
        File f = new File (Pattern_AbsolutePath); 
        //String[] formatNames = new String[50];
        //formatNames = ImageIO.getReaderFormatNames();
        
        java.awt.image.BufferedImage bi;
        java.awt.image.Raster rasterdata;
        
        try{
          // read a pattern
          bi = ImageIO.read(f);
          rasterdata = bi.getData();
          samples[0] = rasterdata.getPixels(0,0,512,512,samples[0]);

        }catch(Exception e){
            System.err.println("Caught IOException: " + e.getMessage());
            JOptionPane.showMessageDialog(this, "I/O exception occurred: " + e.getMessage(), "slm2", JOptionPane.ERROR_MESSAGE);
        }
        
        dlut = readlut();
         
        try{
            //show the surface on the first one that is without limitation of 0 - 2pi
            srt.showpic(samples);
        } catch (Exception e){
            System.err.println("Caught IOException: " + e.getMessage());
            JOptionPane.showMessageDialog(this, "I/O exception occurred: " + e.getMessage(), "slm2", JOptionPane.ERROR_MESSAGE);
        }
        
        for (int i = 0; i < WIDTH*HEIGHT; i++)
        {
            // add the lut process at here.
            // limit the data to 0 - 255, 8 bits data
            samples[0][i] = (int)dlut[(int)Math.round(samples[0][i])%256];
        }
        

        try{
            //show the surface on the second one that is with limitation of 0 - 2pi            
            srt.showpic1(samples);
        } catch (Exception e){
            System.err.println("Caught IOException: " + e.getMessage());
            JOptionPane.showMessageDialog(this, "I/O exception occurred: " + e.getMessage(), "slm2", JOptionPane.ERROR_MESSAGE);
        }
        
        if (USE_DEVICE) {
            // send the data to Phase modulator by JNI ---> slmAPI.dll ---> Phase Modulator 
            com.slmcontrol.slmAPI.slmjava(samples[0], (char)0);      
        }
        
    }//GEN-LAST:event_jBut_patten_SendMouseClicked

    //close the power 
    private void jBut_poweroffMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBut_poweroffMouseClicked
        if (USE_DEVICE) {
            //send the command to turn off the SLM, code is 65
            com.slmcontrol.slmAPI.slmjava(samples[0], (char)65);
        }
    }//GEN-LAST:event_jBut_poweroffMouseClicked
    
    //send the data generated by zernike polynomials
    private void jBut_send2slmMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBut_send2slmMouseClicked
        //zernike polynomials' paramets 
        String tf1, tf2, tf3, tf4, tf5, tf6, tf7, tf8, tf9, tf10, tf11, tf12, tf13, tf14, tf15, tf16;
        String tf17, tf18, tf19, tf20, tf21, tf22, tf23, tf24;
        String spec4, spec5, spec6, spec7, spec8, spec9;
        
        //read the look up table
        dlut = readlut();
        //get the parameters
        tf1 = jTFCoef1.getText();
        tf2 = jTFCoef2.getText();
        tf3 = jTFCoef3.getText();
        tf4 = jTFCoef4.getText();
        tf5 = jTFCoef5.getText();
        tf6 = jTFCoef6.getText();
        tf7 = jTFCoef7.getText();
        tf8 = jTFCoef8.getText();
        tf9 = jTFCoef9.getText();
        tf10 = jTFCoef10.getText();
        tf11 = jTFCoef11.getText();
        tf12 = jTFCoef12.getText();
        tf13 = jTFCoef13.getText();
        tf14 = jTFCoef14.getText();
        tf15 = jTFCoef15.getText();
        tf16 = jTFCoef16.getText();
     
    
        dcoef[0] = Double.valueOf(tf1);
        dcoef[1] = Double.valueOf(tf2);
        dcoef[2] = Double.valueOf(tf3);
        dcoef[3] = Double.valueOf(tf4);
        dcoef[4] = Double.valueOf(tf5);
        dcoef[5] = Double.valueOf(tf6);
        dcoef[6] = Double.valueOf(tf7);
        dcoef[7] = Double.valueOf(tf8);
        dcoef[8] = Double.valueOf(tf9);
        dcoef[9] = Double.valueOf(tf10);
        dcoef[10] = Double.valueOf(tf11);
        dcoef[11] = Double.valueOf(tf12);
        dcoef[12] = Double.valueOf(tf13);
        dcoef[13] = Double.valueOf(tf14);
        dcoef[14] = Double.valueOf(tf15);
        dcoef[15] = Double.valueOf(tf16);    

 
        //generate wavefront data by zernike polynomials parameters
        samples[0] = fzernike(dcoef);        
 
        try{
            srt.showpic(samples);
        } catch (Exception e){
            System.err.println("Caught IOException: " + e.getMessage());}
 
        double[][] showsamples = new double[1][WIDTH * HEIGHT];  
 
        //double [][] show_samples = new double[1][WIDTH * HEIGHT]; 

        for (int i = 0; i < WIDTH*HEIGHT; i++)
        {
            samples[0][i] = (samples[0][i])*256;
            samples[0][i] = (Math.floor(samples[0][i]));
            samples[0][i] = samples[0][i]%256;                   
            if(samples[0][i] < 0)
            {
                samples[0][i] = samples[0][i] + 256;
            }
        }            

        for (int i = 0; i < WIDTH*HEIGHT; i++)
        {
           samples[0][i] = dlut[(int)(samples[0][i])];
        }          
         try{
            srt.showpic1(samples);
        } catch (Exception e){
            System.err.println("Caught IOException: " + e.getMessage());}        
      
        if (USE_DEVICE) {
            com.slmcontrol.slmAPI.slmjava(samples[0], (char)0);        
        }
    }//GEN-LAST:event_jBut_send2slmMouseClicked

    // get the slm size 
    private double getRad(){
        String rad;
        double dRad;
        rad = jTF_slmsize.getText();    
        dRad = Double.valueOf(rad);
        return dRad;
    }
    
    // get the slm resolution
    private double getRes(){
        String res;
        double dRes;
        res = jTF_slmresolution.getText();
        dRes = Double.valueOf(res);
        return dRes;
    }
    
    // read look up table
    private double [] readlut(){
        double[] lut = new double[256];
        char []inpu = new char[3000];
        int i = 0;
        String temp;
        String []temp1 = new String[512];

        FileReader Inlut;
        
        if(LUTFile == null){
             JOptionPane.showMessageDialog(this, "Please select a lut file", "slm2", JOptionPane.ERROR_MESSAGE);
        }        
        
        try{
            Inlut = new FileReader(LUTFile);
            Inlut.read(inpu);
        } catch (Exception e){
            System.err.println("Caught IOException: " + e.getMessage());}
        
        temp = String.valueOf(inpu);
        temp = temp.replaceAll("\r\n", " ");
        temp = temp.replaceAll("\t", " ");
        temp = temp.replaceAll("  ", " ");
        temp1 = temp.split(" ");
        
        for (i = 0; i < 256; i ++){
            lut[i] = Double.valueOf(temp1[2*i+1]);
        }
        return lut;
    }
    
    
    // generate slm surface data according to zernike polynomial parameters
    public double[] fzernike(double[] dCoef){
    //
        int x, y;
        double realx, realy, Radius;
        double divX, divY, XSquPlusYSqu, divXSqu, divYSqu, XPYSquSqu;
        double term1, term2, term3, term4, term5, term6, term7, term8, term9, term10, term11, term12, term13, term14, term15, term16,total;
        double term17, term18, term19, term20, term21, term22, term23, term24;
        double Piston, XTilt, YTilt, Power, AstigOne, AstigTwo, ComaX, ComaY;
        double PrimarySpherical, TrefoilX, TrefoilY, SecondaryAstigX, SecondaryAstigY, SecondaryComaX, SecondaryComaY, SecondarySpherical;
        double TetrafoilX, TetrafoilY, SecTrefoilX, SecTrefoilY, TertiaryAstigX, TertiaryAstigY, TertiaryComaX, TertiaryComaY;
        int defocusbins, stigxbins, stigybins, comaxbins, comaybins, speribins;
        
        int SLMSIZE, ActSize, start, end;
        
        SLMSIZE = WIDTH;
        Piston = dCoef[0]; XTilt = dCoef[1]; YTilt = dCoef[2]; Power = dCoef[3];
        AstigOne = dCoef[4]; AstigTwo = dCoef[5]; ComaX = dCoef[6]; ComaY = dCoef[7];
        PrimarySpherical = dCoef[8]; TrefoilX = dCoef[9]; TrefoilY = dCoef[10]; SecondaryAstigX = dCoef[11];
        SecondaryAstigY = dCoef[12]; SecondaryComaX = dCoef[13]; SecondaryComaY = dCoef[14]; SecondarySpherical = dCoef[15];
        /*
        TetrafoilX = dCoef[16]; TetrafoilY = dCoef[17]; SecTrefoilX = dCoef[18]; SecTrefoilY = dCoef[19];
        TertiaryAstigX = dCoef[20]; TertiaryAstigY = dCoef[21]; TertiaryComaX = dCoef[22]; TertiaryComaY = dCoef[23]; 
        */
       
        double[] zern = new double[SLMSIZE*SLMSIZE];
        double[] defoterm = new double[SLMSIZE*SLMSIZE];
        double[] stigxterm = new double[SLMSIZE*SLMSIZE];
        double[] stigyterm = new double[SLMSIZE*SLMSIZE];
        double[] comaxterm = new double[SLMSIZE*SLMSIZE];
        double[] comayterm = new double[SLMSIZE*SLMSIZE];
        double[] speriterm = new double[SLMSIZE*SLMSIZE];
          
       
        
        /*
        for (int i = 0; i < SLMSIZE; i++)
            for(int j = 0; j < SLMSIZE; j++)
                zern[i*SLMSIZE+j] = 0;
        */
        // Get the set slm size (specified in the window).
        ActSize = (int)getRad();

        // Get the resolution (specified in the window).
        int resolution, restimes;
        resolution = (int)getRes();
        restimes = ActSize/resolution;
        // GH: restimes=1

        // change the square to round
        // change the slm size to radius, if slm size if max value (512), the radius is 300. 
        //Radius = ActSize*300/512;
        Radius = ActSize*256/512;
        // GH: Shouldn't it be 256?
        
        System.out.println("Radius is " + Radius);
        
        // if the set slm size is not 512, take the center of the phase modulator
        start = (SLMSIZE - ActSize)/2; // GH: 0
        end = start + ActSize; // GH: 512 (OK, not included).
        
	y = ActSize/2; // 256
        realy = y; // 256
        
        // set the surface by polynomia parameters, pixel by pixel 
        // GH: row=0; row < 512; row++
	for(int row = start; row < end; row++){
            //reset x
	    x = (ActSize/2)*-1;  // GH: -256
            realx = x;   // GH: -256
            
           // GH: col=0; col < 512; col++
	    for(int col = start; col < end; col++){
		//build some terms that are repeated through the equations
		divX = realx/Radius; // -256/300 = -0.8533
		divY = realy/Radius; // +256/300 = -0.8533
		XSquPlusYSqu = divX*divX + divY*divY;
		XPYSquSqu = XSquPlusYSqu*XSquPlusYSqu;
		divXSqu = divX*divX;
		divYSqu = divY*divY;
                
                //JOptionPane.showMessageDialog(this, "rho = " + Math.sqrt(divXSqu + divYSqu), "slm2", JOptionPane.INFORMATION_MESSAGE);
                
                if ((jSquareCheckBox.isSelected() ||
                        (divXSqu + divYSqu) <= 1) &&
                    (!jCutCenterCheckBox.isSelected() ||
                        ((divXSqu + divYSqu) >= 0.10))) {
                    /* Only defined on the "unit" circle. */
                    //figure out what each term in the equation is
                    /*
                     *XXX/NOTE:
                     *Min Ren had all coefficients like: Coeff/2, instead
                     *of the like sqrt(5) in front of sph. aberration.
                     *(conventional definition).
                     *XXX/NOTE: Changed to conventional definitions.
                     */
                    /*
                    term1 = (Piston);
                    term2 = 2*(XTilt)*divX;
                    term3 = 2*(YTilt)*divY;
                    term4 = Math.sqrt(3)*(Power)*(2*XSquPlusYSqu - 1);
                    term5 = Math.sqrt(6)*(AstigOne)*(divXSqu - divY*divY);
                    term6 = Math.sqrt(6)*(AstigTwo)*(2*divX*divY);
                    term7 = Math.sqrt(8)*(ComaX)*(3*divX*XSquPlusYSqu - 2*divX);
                    term8 = Math.sqrt(8)*(ComaY)*(3*divY*XSquPlusYSqu - 2*divY);                    
                    term9 = Math.sqrt(5)*(PrimarySpherical)*(1 - 6*XSquPlusYSqu + 6*XPYSquSqu);
                    term10 = Math.sqrt(8)*(TrefoilX)*(divXSqu*divX - 3*divX*divYSqu);
                    term11 = Math.sqrt(8)*(TrefoilY)*(3*divXSqu*divY - divYSqu*divY);
                    term12 = Math.sqrt(10)*(SecondaryAstigX)*(3*divYSqu - 3*divXSqu + 4*divXSqu*XSquPlusYSqu - 4*divYSqu*XSquPlusYSqu);
                    term13 = Math.sqrt(10)*(SecondaryAstigY)*(8*divX*divY*XSquPlusYSqu - 6*divX*divY);
                    term14 = Math.sqrt(12)*(SecondaryComaX)*(3*divX - 12*divX*XSquPlusYSqu + 10*divX*XPYSquSqu);
                    term15 = Math.sqrt(12)*(SecondaryComaY)*(3*divY - 12*divY*XSquPlusYSqu + 10*divY*XPYSquSqu);
                    term16 = Math.sqrt(7)*(SecondarySpherical)*(12*XSquPlusYSqu - 1 - 30*XPYSquSqu + 20*XSquPlusYSqu*XPYSquSqu); 
                     */
                    term1 = (Piston/2);
                    term2 = (XTilt/2)*divX;
                    term3 = (YTilt/2)*divY;
                    term4 = (Power/2)*(2*XSquPlusYSqu - 1);
                    term5 = (AstigOne/2)*(divXSqu - divY*divY);
                    term6 = (AstigTwo/2)*(2*divX*divY);
                    term7 = (ComaX/2)*(3*divX*XSquPlusYSqu - 2*divX);
                    term8 = (ComaY/2)*(3*divY*XSquPlusYSqu - 2*divY);                    
                    term9 = (PrimarySpherical/2)*(1 - 6*XSquPlusYSqu + 6*XPYSquSqu);
                    term10 = (TrefoilX/2)*(divXSqu*divX - 3*divX*divYSqu);
                    term11 = (TrefoilY/2)*(3*divXSqu*divY - divYSqu*divY);
                    term12 = (SecondaryAstigX/2)*(3*divYSqu - 3*divXSqu + 4*divXSqu*XSquPlusYSqu - 4*divYSqu*XSquPlusYSqu);
                    term13 = (SecondaryAstigY/2)*(8*divX*divY*XSquPlusYSqu - 6*divX*divY);
                    term14 = (SecondaryComaX/2)*(3*divX - 12*divX*XSquPlusYSqu + 10*divX*XPYSquSqu);
                    term15 = (SecondaryComaY/2)*(3*divY - 12*divY*XSquPlusYSqu + 10*divY*XPYSquSqu);
                    term16 = (SecondarySpherical/2)*(12*XSquPlusYSqu - 1 - 30*XPYSquSqu + 20*XSquPlusYSqu*XPYSquSqu);                    
                    /*
                     * Note: these (commented) coefficients need to be fixed (if to be used).
                    term17 = (TetrafoilX/2)*(divXSqu*divXSqu - 6*divXSqu*divYSqu + divYSqu*divYSqu);
                    term18 = (TetrafoilY/2)*(4*divXSqu*divX*divY - 4*divX*divY*divYSqu);
                    term19 = (SecTrefoilX/2)*(divXSqu*divX - 3*divX*divYSqu)*(-4 + 5*XSquPlusYSqu);
                    term20 = (SecTrefoilY/2)*(3*divXSqu*divY - divYSqu*divY)*(-4 + 5*XSquPlusYSqu);
                    term21 = (TertiaryAstigX/2)*(6*divXSqu - 6*divYSqu + 20*XSquPlusYSqu*divYSqu - 20*XSquPlusYSqu*divXSqu + 15*XPYSquSqu*divXSqu - 15*XPYSquSqu*divYSqu);
                    term22 = (TertiaryAstigY/2)*(12*divX*divY - 40*XSquPlusYSqu*divX*divY + 30*XPYSquSqu*divX*divY);
                    term23 = (TertiaryComaX/2)*(-4*divX + 30*divX*XSquPlusYSqu - 60*divX*XPYSquSqu + 35*divX*XSquPlusYSqu*XPYSquSqu);    
                    term24 = (TertiaryComaY/2)*(-4*divY + 30*divY*XSquPlusYSqu - 60*divY*XPYSquSqu + 35*divY*XSquPlusYSqu*XPYSquSqu);
                    */
                    total = term1+term2+term3+term10+term11+term12+term13+term14+term15+term16;
                    total = total + term4 + term5 + term6 + term7 + term8 + term9;
                } else {
                    total = 0;
                }
                
              
		zern[row*SLMSIZE+col] = (total);
                x++;
                realx = (int)(x/restimes)*restimes;
            }
            y--;
            realy = (int)(y/restimes)*restimes;
        }
        
        return zern;
    }
       
    private double [] averagebinsize(double[] term, int size){
            double sum, average;
            average = 0;
            for(int ii = 0; ii < 512; ii = ii + size){
                for(int jj = 0; jj < 512; jj = jj + size ){
                    sum = 0; 
                    for(int kk = 0; kk < size; kk++){
                        for(int ll = 0; ll < size; ll++){
                            sum = sum + term[(ii+kk)*512 + jj + ll];    
                        }
                    }
                    average = sum/(size*size);
                    for(int kk = 0; kk < size; kk++){
                        for(int ll = 0; ll < size; ll++){
                            term[(ii+kk)*512 + jj + ll] = average;    
                        }
                    }
                }
            }
            return term;
    }
    
    private void jFileChooser1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jFileChooser1MouseClicked
    }//GEN-LAST:event_jFileChooser1MouseClicked

    //function is used to save the parameter to a file so the parameters can be loaded by "open" button later
    private void jBut_saveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBut_saveMouseClicked
        String tf1, tf2, tf3, tf4, tf5, tf6, tf7, tf8, tf9, tf10, tf11, tf12, tf13, tf14, tf15, tf16;
        String tf17, tf18, tf19, tf20, tf21, tf22, tf23, tf24, tfout;
        //get the parameters
        tf1 = jTFCoef1.getText();
        tf2 = jTFCoef2.getText();
        tf3 = jTFCoef3.getText();
        tf4 = jTFCoef4.getText();
        tf5 = jTFCoef5.getText();
        tf6 = jTFCoef6.getText();
        tf7 = jTFCoef7.getText();
        tf8 = jTFCoef8.getText();
        tf9 = jTFCoef9.getText();
        tf10 = jTFCoef10.getText();
        tf11 = jTFCoef11.getText();
        tf12 = jTFCoef12.getText();
        tf13 = jTFCoef13.getText();
        tf14 = jTFCoef14.getText();
        tf15 = jTFCoef15.getText();
        tf16 = jTFCoef16.getText();
      
        tfout = tf1 + ", " + tf2 + ", " + tf3 +  ", " + tf4 + ", " + tf5 + ", " + tf6 + ", " + tf7 + ", " + tf8;
        tfout = tfout+", "+tf9+", "+tf10+", "+tf11+ ", "+tf12+", "+tf13+", "+tf14+", "+tf15+", "+tf16; 
        
        //write to the file        
        jFileChooser1.setVisible(true);
        jFileChooser1.showDialog(this, "save");
        ZerCoefile = jFileChooser1.getSelectedFile();
        
        try{
            FileWriter OutZerCoef;
            OutZerCoef = new FileWriter(ZerCoefile);
            OutZerCoef.write(tfout);
            OutZerCoef.close();
            
        } catch (Exception e){
            System.err.println("Caught IOException: " + e.getMessage());}
        return;        
    }//GEN-LAST:event_jBut_saveMouseClicked

    // show the slm surface data on computer, but don't send to slm
    private void jBut_showMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBut_showMouseClicked
     // TODO add your handling code here:
        String tf1, tf2, tf3, tf4, tf5, tf6, tf7, tf8, tf9, tf10, tf11, tf12, tf13, tf14, tf15, tf16;
        String tf17, tf18, tf19, tf20, tf21, tf22, tf23, tf24;
        tf1 = jTFCoef1.getText();
        tf2 = jTFCoef2.getText();
        tf3 = jTFCoef3.getText();
        tf4 = jTFCoef4.getText();
        tf5 = jTFCoef5.getText();
        tf6 = jTFCoef6.getText();
        tf7 = jTFCoef7.getText();
        tf8 = jTFCoef8.getText();
        tf9 = jTFCoef9.getText();
        tf10 = jTFCoef10.getText();
        tf11 = jTFCoef11.getText();
        tf12 = jTFCoef12.getText();
        tf13 = jTFCoef13.getText();
        tf14 = jTFCoef14.getText();
        tf15 = jTFCoef15.getText();
        tf16 = jTFCoef16.getText();
        
        dcoef[0] = Double.valueOf(tf1);
        dcoef[1] = Double.valueOf(tf2);
        dcoef[2] = Double.valueOf(tf3);
        dcoef[3] = Double.valueOf(tf4);
        dcoef[4] = Double.valueOf(tf5);
        dcoef[5] = Double.valueOf(tf6);
        dcoef[6] = Double.valueOf(tf7);
        dcoef[7] = Double.valueOf(tf8);
        dcoef[8] = Double.valueOf(tf9);
        dcoef[9] = Double.valueOf(tf10);
        dcoef[10] = Double.valueOf(tf11);
        dcoef[11] = Double.valueOf(tf12);
        dcoef[12] = Double.valueOf(tf13);
        dcoef[13] = Double.valueOf(tf14);
        dcoef[14] = Double.valueOf(tf15);
        dcoef[15] = Double.valueOf(tf16);    

 
        //////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////
        samples[0] = fzernike(dcoef);

        try {
            srt.showpic(samples);
        } catch (Exception e) {
            System.err.println("Caught IOException: " + e.getMessage());
        }  
        
        for (int i = 0; i < WIDTH*HEIGHT; i++)
        {
            samples[0][i] = ((samples[0][i] * 256))%256;
            if(samples[0][i] < 0)
            {
                samples[0][i] = samples[0][i] + 256;
            }
        }
        
        try{
            srt.showpic1(samples);
        } catch (Exception e) {
            System.err.println("Caught IOException: " + e.getMessage());
        }
        return;
    }//GEN-LAST:event_jBut_showMouseClicked

    //reset all parameters to 0
    private void jBut_resetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBut_resetMouseClicked
        jTFCoef1.setText("0");
        jTFCoef2.setText("0");
        jTFCoef3.setText("0");
        jTFCoef4.setText("0");
        jTFCoef5.setText("0");
        jTFCoef6.setText("0");
        jTFCoef7.setText("0");
        jTFCoef8.setText("0");  
        jTFCoef9.setText("0");
        jTFCoef10.setText("0");
        jTFCoef11.setText("0");
        jTFCoef12.setText("0");
        jTFCoef13.setText("0");
        jTFCoef14.setText("0");
        jTFCoef15.setText("0");
        jTFCoef16.setText("0");            
       
        return;
    }//GEN-LAST:event_jBut_resetMouseClicked

    //open the exist file saved by "save" button that has the parameters
    private void jBut_openMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBut_openMouseClicked
        char []tfin = new char[500];
        String strin = "0";
        
        String []strin_arr = new String[30];
        
        jFileChooser1.setVisible(true);
        jFileChooser1.showDialog(this, "borwse");
        ZerCoefile = jFileChooser1.getSelectedFile();
        int i;
        FileReader InZerCoef;
        try{
            InZerCoef = new FileReader(ZerCoefile);
            i = InZerCoef.read(tfin);

        } catch (Exception e){
            System.err.println("Caught IOException: " + e.getMessage());}
        
        strin = strin.valueOf(tfin);
        strin_arr = strin.split(", ");

        //read the file and set to the parameters
        jTFCoef1.setText(strin_arr[0]);
        jTFCoef2.setText(strin_arr[1]);
        jTFCoef3.setText(strin_arr[2]);
        jTFCoef4.setText(strin_arr[3]);
        jTFCoef5.setText(strin_arr[4]);
        jTFCoef6.setText(strin_arr[5]);
        jTFCoef7.setText(strin_arr[6]);
        jTFCoef8.setText(strin_arr[7]);  
        jTFCoef9.setText(strin_arr[8]);
        jTFCoef10.setText(strin_arr[9]);
        jTFCoef11.setText(strin_arr[10]);
        jTFCoef12.setText(strin_arr[11]);
        jTFCoef13.setText(strin_arr[12]);
        jTFCoef14.setText(strin_arr[13]);
        jTFCoef15.setText(strin_arr[14]);
        jTFCoef16.setText(strin_arr[15]);            
        return;
    }//GEN-LAST:event_jBut_openMouseClicked

    private void jTFCoef14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFCoef14ActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jTFCoef14ActionPerformed

    private void jTFCoef12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFCoef12ActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jTFCoef12ActionPerformed

    private void jTFCoef9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFCoef9ActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jTFCoef9ActionPerformed

    private void jTFCoef3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFCoef3ActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jTFCoef3ActionPerformed

    private void jBut_patten_brwMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBut_patten_brwMouseClicked
        jFileChooser1.setVisible(true);
        jFileChooser1.showDialog(this, "borwse");
        PatternFile = jFileChooser1.getSelectedFile();
        Pattern_AbsolutePath = PatternFile.getAbsolutePath();
        jTF_pattern.setText(Pattern_AbsolutePath);        
    }//GEN-LAST:event_jBut_patten_brwMouseClicked
    private void jBut_lut_browseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBut_lut_browseMouseClicked
        jFileChooser1.setVisible(true);
        jFileChooser1.showDialog(this, "borwse");
        LUTFile = jFileChooser1.getSelectedFile();
        LUT_AbsolutePath = LUTFile.getAbsolutePath();
        jTF_lut.setText(LUT_AbsolutePath);
    }//GEN-LAST:event_jBut_lut_browseMouseClicked

    private void jBut_openActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBut_openActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jBut_openActionPerformed

    private void jTFCoef15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFCoef15ActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jTFCoef15ActionPerformed

    private void jTFCoef6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFCoef6ActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jTFCoef6ActionPerformed

    private void jTFCoef11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFCoef11ActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jTFCoef11ActionPerformed

    private void jTFCoef5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFCoef5ActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jTFCoef5ActionPerformed

    private void jTFCoef8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFCoef8ActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jTFCoef8ActionPerformed

    private void jTFCoef1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFCoef1ActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jTFCoef1ActionPerformed

    private void jBut_showActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBut_showActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jBut_showActionPerformed

    private void jSquareCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSquareCheckBoxActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_jSquareCheckBoxActionPerformed

    private void jBut_send2slmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBut_send2slmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jBut_send2slmActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new slm2().setVisible(true);
            }
        });
    }
 
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JButton jBut_lut_browse;
    javax.swing.JButton jBut_lut_changefocus;
    javax.swing.JButton jBut_lut_resetfocus;
    javax.swing.JButton jBut_open;
    javax.swing.JButton jBut_patten_Clear;
    javax.swing.JButton jBut_patten_Clear1;
    javax.swing.JButton jBut_patten_Clear3;
    javax.swing.JButton jBut_patten_Clear4;
    javax.swing.JButton jBut_patten_Send;
    javax.swing.JButton jBut_patten_Send1;
    javax.swing.JButton jBut_patten_Send3;
    javax.swing.JButton jBut_patten_Send4;
    javax.swing.JButton jBut_patten_brw;
    javax.swing.JButton jBut_patten_brw1;
    javax.swing.JButton jBut_patten_brw3;
    javax.swing.JButton jBut_patten_brw4;
    javax.swing.JButton jBut_poweroff;
    javax.swing.JButton jBut_reset;
    javax.swing.JButton jBut_save;
    javax.swing.JButton jBut_send2slm;
    javax.swing.JButton jBut_show;
    javax.swing.JCheckBox jCutCenterCheckBox;
    javax.swing.JFileChooser jFileChooser1;
    javax.swing.JLabel jLCoef1;
    javax.swing.JLabel jLCoef10;
    javax.swing.JLabel jLCoef11;
    javax.swing.JLabel jLCoef12;
    javax.swing.JLabel jLCoef13;
    javax.swing.JLabel jLCoef14;
    javax.swing.JLabel jLCoef15;
    javax.swing.JLabel jLCoef18;
    javax.swing.JLabel jLCoef2;
    javax.swing.JLabel jLCoef3;
    javax.swing.JLabel jLCoef4;
    javax.swing.JLabel jLCoef5;
    javax.swing.JLabel jLCoef6;
    javax.swing.JLabel jLCoef7;
    javax.swing.JLabel jLCoef8;
    javax.swing.JLabel jLCoef9;
    javax.swing.JLabel jLWaveFront;
    javax.swing.JLabel jL_lut;
    javax.swing.JLabel jL_patten;
    javax.swing.JLabel jL_patten1;
    javax.swing.JLabel jL_patten3;
    javax.swing.JLabel jL_patten4;
    javax.swing.JLabel jL_slmresolution;
    javax.swing.JLabel jL_slmsize;
    javax.swing.JLabel jL_zernikpc;
    javax.swing.JPanel jPanel_3dpic;
    javax.swing.JPanel jPanel_3dpic1;
    javax.swing.JCheckBox jSquareCheckBox;
    javax.swing.JTextField jTFCoef1;
    javax.swing.JTextField jTFCoef10;
    javax.swing.JTextField jTFCoef11;
    javax.swing.JTextField jTFCoef12;
    javax.swing.JTextField jTFCoef13;
    javax.swing.JTextField jTFCoef14;
    javax.swing.JTextField jTFCoef15;
    javax.swing.JTextField jTFCoef16;
    javax.swing.JTextField jTFCoef2;
    javax.swing.JTextField jTFCoef3;
    javax.swing.JTextField jTFCoef4;
    javax.swing.JTextField jTFCoef5;
    javax.swing.JTextField jTFCoef6;
    javax.swing.JTextField jTFCoef7;
    javax.swing.JTextField jTFCoef8;
    javax.swing.JTextField jTFCoef9;
    javax.swing.JTextField jTF_lut;
    javax.swing.JTextField jTF_pattern;
    javax.swing.JTextField jTF_pattern1;
    javax.swing.JTextField jTF_pattern3;
    javax.swing.JTextField jTF_pattern4;
    javax.swing.JTextField jTF_slmresolution;
    javax.swing.JTextField jTF_slmsize;
    java.awt.Panel panel1;
    java.awt.Panel panel2;
    java.awt.Panel panel3;
    java.awt.Panel panel4;
    java.awt.Panel panel5;
    java.awt.Panel panel6;
    // End of variables declaration//GEN-END:variables
    
}
